"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./api/auth.js":
/*!*********************!*\
  !*** ./api/auth.js ***!
  \*********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkJwtValidation: () => (/* binding */ checkJwtValidation),\n/* harmony export */   login: () => (/* binding */ login)\n/* harmony export */ });\nasync function login(email, password) {\n    const apiBaseUrl = \"http://localhost:8080\";\n    const res = await fetch(apiBaseUrl + \"/auth/token\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n            email,\n            password\n        }).toString()\n    });\n    const token = await res.text();\n    localStorage.setItem(\"jwt\", token);\n    localStorage.setItem(\"isLoggedIn\", true);\n    localStorage.setItem(\"email\", email);\n    return token;\n}\nasync function checkJwtValidation(token) {\n    const apiBaseUrl = \"http://localhost:8080\";\n    const res = await fetch(apiBaseUrl + \"/auth/validate\", {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\"\n        },\n        body: new URLSearchParams({\n            token\n        }).toString()\n    });\n    const validation = await res.text();\n    if (validation == \"Token is not valid\") {\n        localStorage.removeItem(\"jwt\");\n        return false;\n    } else {\n        localStorage.setItem(\"jwt\", token);\n        return true;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwaS9hdXRoLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sZUFBZUEsTUFBTUMsS0FBSyxFQUFFQyxRQUFRO0lBQ3ZDLE1BQU1DLGFBQWFDLHVCQUErQjtJQUNsRCxNQUFNRyxNQUFNLE1BQU1DLE1BQU1MLGFBQWEsZUFBZTtRQUNoRE0sUUFBUTtRQUNSQyxTQUFTO1lBQUUsZ0JBQWdCO1FBQW9DO1FBQy9EQyxNQUFNLElBQUlDLGdCQUFnQjtZQUFFWDtZQUFPQztRQUFTLEdBQUdXLFFBQVE7SUFDM0Q7SUFDQSxNQUFNQyxRQUFRLE1BQU1QLElBQUlRLElBQUk7SUFDNUJDLGFBQWFDLE9BQU8sQ0FBQyxPQUFPSDtJQUM1QkUsYUFBYUMsT0FBTyxDQUFDLGNBQWM7SUFDbkNELGFBQWFDLE9BQU8sQ0FBQyxTQUFTaEI7SUFFOUIsT0FBT2E7QUFDWDtBQUVPLGVBQWVJLG1CQUFtQkosS0FBSztJQUMxQyxNQUFNWCxhQUFhQyx1QkFBK0I7SUFDbEQsTUFBTUcsTUFBTSxNQUFNQyxNQUFNTCxhQUFhLGtCQUFrQjtRQUNuRE0sUUFBUTtRQUNSQyxTQUFTO1lBQUUsZ0JBQWdCO1FBQW9DO1FBQy9EQyxNQUFNLElBQUlDLGdCQUFnQjtZQUFFRTtRQUFNLEdBQUdELFFBQVE7SUFDakQ7SUFDQSxNQUFNTSxhQUFhLE1BQU1aLElBQUlRLElBQUk7SUFFakMsSUFBSUksY0FBYyxzQkFBc0I7UUFDcENILGFBQWFJLFVBQVUsQ0FBQztRQUN4QixPQUFPO0lBQ1gsT0FBTztRQUNISixhQUFhQyxPQUFPLENBQUMsT0FBT0g7UUFFNUIsT0FBTztJQUNYO0FBQ0oiLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvRG9jdW1lbnRzL0Nsb3VkVHJpcEZyb250ZW5kL2FwaS9hdXRoLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBhc3luYyBmdW5jdGlvbiBsb2dpbihlbWFpbCwgcGFzc3dvcmQpIHtcbiAgICBjb25zdCBhcGlCYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTDtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChhcGlCYXNlVXJsICsgXCIvYXV0aC90b2tlblwiLCB7XG4gICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgIGhlYWRlcnM6IHsgXCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiB9LFxuICAgICAgICBib2R5OiBuZXcgVVJMU2VhcmNoUGFyYW1zKHsgZW1haWwsIHBhc3N3b3JkIH0pLnRvU3RyaW5nKCksXG4gICAgfSk7XG4gICAgY29uc3QgdG9rZW4gPSBhd2FpdCByZXMudGV4dCgpO1xuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiand0XCIsIHRva2VuKTtcbiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImlzTG9nZ2VkSW5cIiwgdHJ1ZSk7XG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJlbWFpbFwiLCBlbWFpbCk7XG5cbiAgICByZXR1cm4gdG9rZW47XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja0p3dFZhbGlkYXRpb24odG9rZW4pIHtcbiAgICBjb25zdCBhcGlCYXNlVXJsID0gcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfQVBJX1VSTDtcbiAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChhcGlCYXNlVXJsICsgXCIvYXV0aC92YWxpZGF0ZVwiLCB7XG4gICAgICAgIG1ldGhvZDogXCJHRVRcIixcbiAgICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiIH0sXG4gICAgICAgIGJvZHk6IG5ldyBVUkxTZWFyY2hQYXJhbXMoeyB0b2tlbiB9KS50b1N0cmluZygpLFxuICAgIH0pO1xuICAgIGNvbnN0IHZhbGlkYXRpb24gPSBhd2FpdCByZXMudGV4dCgpO1xuXG4gICAgaWYgKHZhbGlkYXRpb24gPT0gXCJUb2tlbiBpcyBub3QgdmFsaWRcIikge1xuICAgICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbShcImp3dFwiKTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH0gZWxzZSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiand0XCIsIHRva2VuKTtcblxuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOlsibG9naW4iLCJlbWFpbCIsInBhc3N3b3JkIiwiYXBpQmFzZVVybCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19BUElfVVJMIiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIlVSTFNlYXJjaFBhcmFtcyIsInRvU3RyaW5nIiwidG9rZW4iLCJ0ZXh0IiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsImNoZWNrSnd0VmFsaWRhdGlvbiIsInZhbGlkYXRpb24iLCJyZW1vdmVJdGVtIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./api/auth.js\n"));

/***/ })

});